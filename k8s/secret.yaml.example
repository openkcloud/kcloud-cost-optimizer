apiVersion: v1
kind: Secret
metadata:
  name: policy-engine-secret
  namespace: policy-engine
type: Opaque
stringData:
  # Database configuration (if using persistent storage)
  db_host: "postgres-service"
  db_port: "5432"
  db_name: "policy_engine"
  db_user: "policy_user"
  db_password: "YOUR_DB_PASSWORD_HERE"

  # Redis configuration (if using Redis for caching)
  redis_host: "redis-service"
  redis_port: "6379"
  redis_password: "YOUR_REDIS_PASSWORD_HERE"

  # API authentication tokens
  api_token: "YOUR_API_TOKEN_HERE"

  # External service credentials
  webhook_url: "https://your-webhook-url.com"
  webhook_token: "YOUR_WEBHOOK_TOKEN_HERE"

# IMPORTANT SECURITY NOTES:
# 1. Copy this file to k8s/secret.yaml and replace all placeholder values
# 2. NEVER commit k8s/secret.yaml to version control (it's in .gitignore)
# 3. Use strong, randomly generated passwords and tokens
# 4. Consider using Kubernetes secret management tools:
#    - Sealed Secrets (Bitnami)
#    - External Secrets Operator
#    - HashiCorp Vault
#    - Cloud provider secret managers (AWS Secrets Manager, Azure Key Vault, GCP Secret Manager)
# 5. For production, consider using base64 encoded values in 'data:' instead of 'stringData:'
#
# To create the actual secret file:
#   cp k8s/secret.yaml.example k8s/secret.yaml
#   # Edit k8s/secret.yaml with your actual values
#   kubectl apply -f k8s/secret.yaml
